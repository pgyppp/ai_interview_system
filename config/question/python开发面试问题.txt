列表和元组的核心区别是什么？何时选择使用元组？
args 和 kwargs 的作用是什么？写一个简单函数演示其用法。
解释 with 语句的作用，并举例说明（如文件操作）。
解释Python的GIL是什么，它对多线程编程有何影响？如何规避其限制？
Python装饰器的工作原理是什么？请举例说明实际应用场景。
描述Python的内存管理机制，如何处理循环引用问题？
列表和元组的核心区别是什么？为何元组能在字典中作为键使用？
生成器与迭代器的区别是什么？生成器如何节省内存？
生成器与迭代器的区别是什么？写一个生成器函数实现斐波那契数列。
装饰器的工作原理是什么？写一个记录函数执行时间的装饰器。
解释 __init__ 和 __new__ 方法的区别。
深拷贝（deepcopy）和浅拷贝（copy）的区别？举例说明应用场景。
GIL（全局解释器锁）是什么？它对多线程程序有何限制？如何规避？
Django中如何实现ORM多表关联查询？select_related 和 prefetch_related 的区别？
描述Python内存管理机制（引用计数+垃圾回收），如何定位内存泄漏？
解释*args和**kwargs的作用，并举例说明使用场景。
如何用协程优化高I/O密集型任务？对比多线程方案的优劣。
Django和Flask框架的核心差异是什么？各自适合什么场景？
如何使用SQLAlchemy实现多表关联查询？其Session机制如何管理事务？
如何用性能分析工具定位Python代码瓶颈？请举例说明优化过程。
如何用 asyncio 实现高并发HTTP请求？对比多线程方案的优劣。
优化CPU密集型任务的性能有哪些方法？（如多进程、Cython、C扩展）
如何设计一个支持百万级并发的WebSocket服务？需考虑哪些关键点？

描述你开发过的最复杂的Python项目，你负责的核心模块及遇到的技术挑战。
请举例说明你如何优化过Python项目的性能，具体指标提升多少？
在项目中如何保证代码质量？单元测试覆盖率和CI/CD流程如何实施？
遇到过哪些典型的Python运行时错误？你是如何调试和解决的？
为何在项目中选用特定第三方库？是否对比过其他替代方案？
是否有过Python代码重构经历？驱动因素和最终结果是什么？
请分享一个你主导或核心参与的 Python 项目，说明项目的目标、你负责的模块及最终成果。​
在 Python 项目开发中，你是如何进行代码测试的？使用过哪些测试框架或工具？​
当 Python 项目的代码量逐渐增大时，你是如何保证代码的可维护性和可读性的？​
你在 Python 项目中处理过大量数据吗？请描述具体场景及你采用的处理方案。​
分享一次你在 Python 项目中遇到的线上故障，你是如何排查并解决的？

设计一个高并发的API服务需要哪些核心组件？如何保证可扩展性？
如何设计可动态加载功能的插件化系统？
举例说明你用设计模式解决实际问题的场景。
如何抽象电商促销规则系统以支持灵活配置？
设计缓存系统时如何应对缓存穿透和雪崩问题？
如何将一个复杂的 Python 业务逻辑抽象成清晰的函数或类结构？请举例说明。​
在设计 Python 模块时，你是如何考虑模块间的依赖关系和接口定义的？​
面对一个重复出现的业务场景，你会如何抽象出通用的 Python 工具类或函数库？​
请谈谈你对 Python 设计模式的理解，在实际项目中用过哪些设计模式？它们解决了什么问题？​
如何将用户的非技术语言描述的需求，转化为可执行的 Python 代码逻辑？
Python的优缺点是什么？哪些场景下你会避免使用Python？
最近关注的Python新技术有哪些？如何保持技术更新？
与前端或数据团队协作时如何确保跨系统集成效率？
你希望在团队中承担什么角色？未来3年的技术规划是什么？
如何处理与技术团队成员的分歧？
你为什么想成为一名 Python 工程师？是什么吸引你选择 Python 这门语言？​
你认为作为一名优秀的 Python 工程师，需要具备哪些核心素质？你自身在这些方面有何优势？​
你对我们公司涉及的 Python 相关业务领域有了解吗？你认为自己能为这些业务带来什么价值？​
未来你希望在 Python 哪个技术方向深入发展？这个岗位与你的发展方向是否契合？​
你平时会通过哪些途径学习 Python 新技术？最近有没有学习新的 Python 相关技能？

